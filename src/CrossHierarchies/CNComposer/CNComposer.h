#ifndef CROSSNATIVE_COMPOSER_H#define CROSSNATIVE_COMPOSER_H#include <memory>class CNVisitable;class CNComposer;typedef std::shared_ptr<CNComposer> CNComposerPtr;class CNComposer {public:    virtual  ~CNComposer() {}protected:    CNComposer() {}public:    virtual void mount(std::shared_ptr<CNVisitable> visitable) = 0;    virtual void dismount(std::shared_ptr<CNVisitable> visitable) = 0;};#endif //CROSSNATIVE_COMPOSER_H